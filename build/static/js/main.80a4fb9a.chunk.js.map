{"version":3,"sources":["views/ReactLogo.js","views/Header.js","components/shared/routeProtectors/GameGuard.js","helpers/layout.js","helpers/api.js","helpers/getDomain.js","views/Player.js","views/design/Spinner.js","views/design/Button.js","components/game/Game.js","components/shared/models/User.js","views/Profile.js","components/userprofile/UserProfile.js","components/editprofile/EditProfile.js","components/shared/routers/GameRouter.js","components/shared/routeProtectors/LoginGuard.js","components/login/Login.js","components/registration/Registration.js","components/shared/routers/AppRouter.js","App.js","index.js"],"names":["Logo","styled","svg","props","width","height","ReactLogo","viewBox","fill","d","cx","cy","r","Container","div","background","Title","h1","Header","GameGuard","localStorage","getItem","children","Redirect","to","BaseContainer","api","axios","create","baseURL","headers","handleError","error","response","info","request","responseURL","status","statusText","data","message","console","log","match","alert","UserName","Name","Id","Player","user","name","username","id","Spinner","className","Button","button","disabled","Users","ul","PlayerContainer","li","Game","state","users","loggedInUserToken","loggedInUserId","removeItem","this","setState","history","push","setItem","pathname","userId","get","map","key","onClick","showProfile","style","logout","React","Component","withRouter","User","password","token","birthDate","creationDate","Object","assign","Status","CreationDate","BirthDate","Profile","ButtonContainer","UserProfile","userToBeShownId","userToBeShown","getUser","url","mounted","prevProps","prevState","snapshot","editProfile","returnToDashboard","Label","label","InputField","input","EditProfile","changesSaved","testThing","requestBody","JSON","stringify","put","e","value","placeholder","onChange","handleInputChange","target","saveChanges","GameRouter","Route","exact","path","base","render","LoginGuard","FormContainer","Form","Login","loggedInUser","post","login","Registration","registration","AppRouter","BrowserRouter","Switch","App","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.80a4fb9a.chunk.js","sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Logo = styled.svg`\n  width: ${props => props.width}px;\n  height: ${props => props.height}px;\n`;\nexport const ReactLogo = props => {\n  return (\n    <Logo viewBox=\"0 0 841.9 595.3\" {...props}>\n      <g fill=\"#61DAFB\">\n        <path d=\"M666.3 296.5c0-32.5-40.7-63.3-103.1-82.4 14.4-63.6 8-114.2-20.2-130.4-6.5-3.8-14.1-5.6-22.4-5.6v22.3c4.6 0 8.3.9 11.4 2.6 13.6 7.8 19.5 37.5 14.9 75.7-1.1 9.4-2.9 19.3-5.1 29.4-19.6-4.8-41-8.5-63.5-10.9-13.5-18.5-27.5-35.3-41.6-50 32.6-30.3 63.2-46.9 84-46.9V78c-27.5 0-63.5 19.6-99.9 53.6-36.4-33.8-72.4-53.2-99.9-53.2v22.3c20.7 0 51.4 16.5 84 46.6-14 14.7-28 31.4-41.3 49.9-22.6 2.4-44 6.1-63.6 11-2.3-10-4-19.7-5.2-29-4.7-38.2 1.1-67.9 14.6-75.8 3-1.8 6.9-2.6 11.5-2.6V78.5c-8.4 0-16 1.8-22.6 5.6-28.1 16.2-34.4 66.7-19.9 130.1-62.2 19.2-102.7 49.9-102.7 82.3 0 32.5 40.7 63.3 103.1 82.4-14.4 63.6-8 114.2 20.2 130.4 6.5 3.8 14.1 5.6 22.5 5.6 27.5 0 63.5-19.6 99.9-53.6 36.4 33.8 72.4 53.2 99.9 53.2 8.4 0 16-1.8 22.6-5.6 28.1-16.2 34.4-66.7 19.9-130.1 62-19.1 102.5-49.9 102.5-82.3zm-130.2-66.7c-3.7 12.9-8.3 26.2-13.5 39.5-4.1-8-8.4-16-13.1-24-4.6-8-9.5-15.8-14.4-23.4 14.2 2.1 27.9 4.7 41 7.9zm-45.8 106.5c-7.8 13.5-15.8 26.3-24.1 38.2-14.9 1.3-30 2-45.2 2-15.1 0-30.2-.7-45-1.9-8.3-11.9-16.4-24.6-24.2-38-7.6-13.1-14.5-26.4-20.8-39.8 6.2-13.4 13.2-26.8 20.7-39.9 7.8-13.5 15.8-26.3 24.1-38.2 14.9-1.3 30-2 45.2-2 15.1 0 30.2.7 45 1.9 8.3 11.9 16.4 24.6 24.2 38 7.6 13.1 14.5 26.4 20.8 39.8-6.3 13.4-13.2 26.8-20.7 39.9zm32.3-13c5.4 13.4 10 26.8 13.8 39.8-13.1 3.2-26.9 5.9-41.2 8 4.9-7.7 9.8-15.6 14.4-23.7 4.6-8 8.9-16.1 13-24.1zM421.2 430c-9.3-9.6-18.6-20.3-27.8-32 9 .4 18.2.7 27.5.7 9.4 0 18.7-.2 27.8-.7-9 11.7-18.3 22.4-27.5 32zm-74.4-58.9c-14.2-2.1-27.9-4.7-41-7.9 3.7-12.9 8.3-26.2 13.5-39.5 4.1 8 8.4 16 13.1 24 4.7 8 9.5 15.8 14.4 23.4zM420.7 163c9.3 9.6 18.6 20.3 27.8 32-9-.4-18.2-.7-27.5-.7-9.4 0-18.7.2-27.8.7 9-11.7 18.3-22.4 27.5-32zm-74 58.9c-4.9 7.7-9.8 15.6-14.4 23.7-4.6 8-8.9 16-13 24-5.4-13.4-10-26.8-13.8-39.8 13.1-3.1 26.9-5.8 41.2-7.9zm-90.5 125.2c-35.4-15.1-58.3-34.9-58.3-50.6 0-15.7 22.9-35.6 58.3-50.6 8.6-3.7 18-7 27.7-10.1 5.7 19.6 13.2 40 22.5 60.9-9.2 20.8-16.6 41.1-22.2 60.6-9.9-3.1-19.3-6.5-28-10.2zM310 490c-13.6-7.8-19.5-37.5-14.9-75.7 1.1-9.4 2.9-19.3 5.1-29.4 19.6 4.8 41 8.5 63.5 10.9 13.5 18.5 27.5 35.3 41.6 50-32.6 30.3-63.2 46.9-84 46.9-4.5-.1-8.3-1-11.3-2.7zm237.2-76.2c4.7 38.2-1.1 67.9-14.6 75.8-3 1.8-6.9 2.6-11.5 2.6-20.7 0-51.4-16.5-84-46.6 14-14.7 28-31.4 41.3-49.9 22.6-2.4 44-6.1 63.6-11 2.3 10.1 4.1 19.8 5.2 29.1zm38.5-66.7c-8.6 3.7-18 7-27.7 10.1-5.7-19.6-13.2-40-22.5-60.9 9.2-20.8 16.6-41.1 22.2-60.6 9.9 3.1 19.3 6.5 28.1 10.2 35.4 15.1 58.3 34.9 58.3 50.6-.1 15.7-23 35.6-58.4 50.6zM320.8 78.4z\" />\n        <circle cx=\"420.9\" cy=\"296.5\" r=\"45.7\" />\n        <path d=\"M520.5 78.1z\" />\n      </g>\n    </Logo>\n  );\n};\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { ReactLogo } from \"./ReactLogo\";\n\n/**\n * Using styled-components you can visual HTML primitives and use props with it!\n * The idea behind this external package, it's to have a better structure and overview for your HTML and CSS\n * Using styled-components, you can have styling conditions using the following syntax: ${props => ...}\n * https://www.styled-components.com/\n */\nconst Container = styled.div`\n  height: ${props => props.height}px;\n  background: ${props => props.background};\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Title = styled.h1`\n  font-weight: bold;\n  color: white;\n  text-align: center;\n`;\n/**\n * This is an example of a Functional and stateless component (View) in React. Functional components are not classes and thus don't handle internal state changes.\n * Conceptually, components are like JavaScript functions. They accept arbitrary inputs (called “props”) and return React elements describing what should appear on the screen.\n * They are reusable pieces, and think about each piece in isolation.\n * Functional components have to return always something. However, they don't need a \"render()\" method.\n * https://reactjs.org/docs/components-and-props.html\n * @FunctionalComponent\n */\nconst Header = props => {\n  return (\n    <Container height={props.height}>\n      <Title>SoPra FS20 rocks with React!</Title>\n      <ReactLogo width={60} height={60} />\n    </Container>\n  );\n};\n\n/**\n * Don't forget to export your component!\n */\nexport default Header;\n","import React from \"react\";\nimport { Redirect } from \"react-router-dom\";\n\n/**\n * routeProtectors interfaces can tell the router whether or not it should allow navigation to a requested route.\n * They are functional components. Based on the props passed, a route gets rendered.\n * In this case, if the user is authenticated (i.e., a token is stored in the local storage)\n * {props.children} are rendered --> The content inside the <GameGuard> in the App.js file, i.e. the user is able to access the main app.\n * If the user isn't authenticated, the components redirects to the /login screen\n * @Guard\n * @param props\n */\nexport const GameGuard = props => {\n  if (localStorage.getItem(\"token\")) {\n    return props.children;\n  }\n  return <Redirect to={\"/login\"} />;\n};\n","import styled from \"styled-components\";\n\nexport const DESKTOP_WIDTH = 1160;\nexport const SMALL_LAPTOPS_WIDTH = 970;\nexport const TABLETS_WIDTH = 750;\nexport const SMALL_WIDTH = 768;\n\nexport const BaseContainer = styled.div`\n  margin-left: auto;\n  padding-left: 15px;\n  margin-right: auto;\n  padding-right: 15px;\n  max-width: ${DESKTOP_WIDTH}px;\n`;\n","import axios from 'axios';\nimport { getDomain } from './getDomain';\n\nexport const api = axios.create({\n  baseURL: getDomain(),\n  headers: { 'Content-Type': 'application/json' }\n});\n\nexport const handleError = error => {\n  if (error.response) {\n    let info = '';\n    info += `\\nrequest to: ${error.response.request.responseURL}`;\n    info += `\\nstatus code: ${error.response.status}`;\n    info += `\\nstatus text: ${error.statusText}`;\n    info += `\\nerror: ${error.response.data.error}`;\n    info += `\\nerror message: ${error.response.data.message}`;\n\n    console.log('The request was made and answered but was unsuccessful.', error.response);\n    return info;\n  } else {\n    if (error.message.match(/Network Error/)) {\n      alert('The server cannot be reached. Did you start it?');\n    }\n\n    console.log('Something else happened.', error);\n    return error.message;\n  }\n};\n","import { isProduction } from './isProduction';\n\n/**\n * This helper function returns the current domain of the API.\n * If the environment is production, the production Heroku URL will be returned.\n * Otherwise, the link localhost:8080 will be returned (Spring server default port).\n * @returns {string}\n */\nexport const getDomain = () => {\n  const prodUrl = 'https://sopra-fs20-lknufi-server.herokuapp.com'; // TODO: insert your groups heroku prod url for server (once deployed)\n  const devUrl = 'http://localhost:8080';\n\n  return isProduction() ? prodUrl : devUrl;\n};\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  margin: 6px 0;\n  width: 400px;\n  padding: 10px;\n  border-radius: 6px;\n  display: flex;\n  align-items: center;\n  border: 1px solid #ffffff26;\n`;\n\nconst UserName = styled.div`\n  font-weight: lighter;\n  margin-left: 15px;\n`;\n\nconst Name = styled.div`\n  font-weight: bold;\n  color: #06c4ff;\n`;\n\nconst Id = styled.div`\n  margin-left: auto;\n  margin-right: 10px;\n  font-weight: bold;\n`;\n\n/**\n * This is an example of a Functional and stateless component (View) in React. Functional components are not classes and thus don't handle internal state changes.\n * Conceptually, components are like JavaScript functions. They accept arbitrary inputs (called “props”) and return React elements describing what should appear on the screen.\n * They are reusable pieces, and think about each piece in isolation.\n * Functional components have to return always something. However, they don't need a \"render()\" method.\n * https://reactjs.org/docs/components-and-props.html\n * @FunctionalComponent\n */\nconst Player = ({ user }) => {\n  return (\n    <Container>\n      <Name>Name: {user.name}</Name> <UserName>Username: {user.username}</UserName>\n      <Id>Id: {user.id}</Id>\n    </Container>\n  );\n};\n\nexport default Player;\n","import React from \"react\";\nimport \"./spinner.css\";\n\nexport const Spinner = () => {\n  return (\n    <div className=\"lds-ellipsis\">\n      <div />\n      <div />\n      <div />\n      <div />\n    </div>\n  );\n};\n","import styled from \"styled-components\";\n\nexport const Button = styled.button`\n  &:hover {\n    transform: translateY(-2px);\n  }\n  padding: 6px;\n  font-weight: 700;\n  text-transform: uppercase;\n  font-size: 13px;\n  text-align: center;\n  color: rgba(255, 255, 255, 1);\n  width: ${props => props.width || null};\n  height: 35px;\n  border: none;\n  border-radius: 20px;\n  cursor: ${props => (props.disabled ? \"default\" : \"pointer\")};\n  opacity: ${props => (props.disabled ? 0.4 : 1)};\n  background: rgb(16, 89, 255);\n  transition: all 0.3s ease;\n`;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { BaseContainer } from '../../helpers/layout';\nimport { api, handleError } from '../../helpers/api';\nimport Player from '../../views/Player';\n//import UserProfile from '../../components/userprofile/UserProfile';\n//import EditProfile from \"../editprofile/EditProfile\";\nimport { Spinner } from '../../views/design/Spinner';\nimport { Button } from '../../views/design/Button';\nimport { withRouter } from 'react-router-dom';\n// import UserProfile from \"../userprofile/UserProfile\";\n\n\n\nconst Container = styled(BaseContainer)`\n  color: white;\n  text-align: center;\n`;\n\nconst Users = styled.ul`\n  list-style: none;\n  padding-left: 0;\n`;\n\nconst PlayerContainer = styled.li`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport class Game extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      users: null,\n      loggedInUserToken: localStorage.getItem(\"token\"),\n      loggedInUserId: localStorage.getItem(\"userId\")\n    };\n  }\n\n  logout() {\n    localStorage.removeItem('token');\n    localStorage.removeItem('userId');\n    this.setState({ loggedInUserToken: null });\n    this.setState({ loggedInUserId: null });\n    this.props.history.push('/login');\n  }\n\n  showProfile(id) {\n    localStorage.setItem('showUserId', id);\n    this.props.history.push({pathname: '/game/dashboard/user', userId: id});\n  }\n\n  async componentDidMount() {\n    try {\n      const response = await api.get('/users');\n      // delays continuous execution of an async operation for 1 second.\n      // This is just a fake async call, so that the spinner can be displayed\n      // feel free to remove it :)\n      // await new Promise(resolve => setTimeout(resolve, 1000));\n\n      // Get the returned users and update the state.\n      this.setState({ users: response.data });\n\n      // This is just some data for you to see what is available.\n      // Feel free to remove it.\n      console.log('request to:', response.request.responseURL);\n      console.log('status code:', response.status);\n      console.log('status text:', response.statusText);\n      console.log('requested data:', response.data);\n\n      // See here to get more data.\n      console.log(response);\n    } catch (error) {\n      alert(`Something went wrong while fetching the users: \\n${handleError(error)}`);\n    }\n  }\n\n  render() {\n    return (\n      <Container>\n        <h2>Happy Coding! </h2>\n        <p>Get all users from secure end point:</p>\n        {!this.state.users ? (\n          <Spinner />\n        ) : (\n          <div>\n            <Users>\n              {this.state.users.map(user => {\n                return (\n                  <PlayerContainer key={user.id}>\n                    <Player user={user}/>\n                    <Button\n                        onClick={() => {this.showProfile(user.id)}}\n                        style={{width: 300}}\n                    >\n                      Show Profile of {user.username}\n                    </Button>\n                  </PlayerContainer>\n                );\n              })}\n            </Users>\n            <Button\n              width=\"100%\"\n              onClick={() => {\n                this.logout();\n              }}\n            >\n              Logout\n            </Button>\n          </div>\n        )}\n      </Container>\n    );\n  }\n}\n\nexport default withRouter(Game);","/**\n * User model\n */\nclass User {\n  constructor(data = {}) {\n    this.id = null;\n    this.name = null;\n    this.username = null;\n    this.password = null;\n    this.token = null;\n    this.status = null;\n    this.birthDate = null;\n    this.creationDate = null;\n    Object.assign(this, data);\n  }\n}\nexport default User;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  margin: 6px 0;\n  width: 400px;\n  height: flex;\n  padding: 10px;\n  border-radius: 6px;\n  display: flex;\n  align-items: left;\n  flex-direction: column;\n  background: linear-gradient(rgb(27, 124, 186), rgb(2, 46, 101));\n`;\n\nconst UserName = styled.div`\n  font-weight: bold;\n  margin-top: 10px;\n  margin-left: 5px;\n`;\n\nconst Name = styled.div`\n  margin-top: 10px;\n  font-weight: bold;\n  margin-left: 5px;\n`;\n\nconst Status = styled.div`\n  margin-top: 10px;\n  font-weight: bold;\n  margin-left: 5px;\n`;\n\nconst CreationDate = styled.div`\n  margin-top: 10px;\n  font-weight: bold;\n  margin-left: 5px;\n`;\n\nconst BirthDate = styled.div`\n  margin-top: 10px;\n  font-weight: bold;\n  margin-left: 5px;\n`;\n\n/**\n * This is an example of a Functional and stateless component (View) in React. Functional components are not classes and thus don't handle internal state changes.\n * Conceptually, components are like JavaScript functions. They accept arbitrary inputs (called “props”) and return React elements describing what should appear on the screen.\n * They are reusable pieces, and think about each piece in isolation.\n * Functional components have to return always something. However, they don't need a \"render()\" method.\n * https://reactjs.org/docs/components-and-props.html\n * @FunctionalComponent\n */\nconst Profile = ({ user }) => {\n    return (\n        <Container>\n            <Name>Name: {user.name}</Name>\n            <UserName>Username: {user.username}</UserName>\n            <Status>Status: {user.status}</Status>\n            <CreationDate>CreationDate: {user.creationDate}</CreationDate>\n            <BirthDate>Birth Date: {user.birthDate}</BirthDate>\n        </Container>\n    );\n};\n\nexport default Profile;\n","import React from 'react';\nimport styled from 'styled-components';\nimport {BaseContainer} from '../../helpers/layout';\nimport {api, handleError} from '../../helpers/api';\n//import Player from '../../views/Player';\n//import { Spinner } from '../../views/design/Spinner';\nimport {Button} from '../../views/design/Button';\nimport {withRouter} from 'react-router-dom';\nimport User from \"../shared/models/User\";\nimport Profile from \"../../views/Profile\";\n// import EditProfile from \"../editprofile/EditProfile\";\n\nconst Container = styled(BaseContainer)`\n  color: white;\n  text-align: left;\n`;\n\nconst ButtonContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  margin-top: 20px;\n`;\n\nclass UserProfile extends React.Component {\n    constructor() {\n        super();\n        this.state = {\n            loggedInUserId: localStorage.getItem(\"userId\"),\n            userToBeShownId: localStorage.getItem(\"showUserId\"),\n            userToBeShown: null\n        };\n        this.getUser();\n    }\n\n    async getUser() {\n        try {\n            const url = '/users/' + this.state.userToBeShownId;\n\n            const response = await api.get(url);\n\n            const user = new User(response.data);\n\n            this.setState({userToBeShown: user});\n        } catch (e) {\n            alert(`Something went wrong while displaying the user profile: \\n${handleError(e)}`);\n        }\n    }\n\n    editProfile() {\n        this.setState({mounted: false});\n        this.props.history.push('/game/dashboard/user/edit');\n    }\n\n    returnToDashboard(){\n        localStorage.removeItem(\"showUserID\")\n        this.setState({userToBeShownId: null});\n        this.setState({userToBeShown: null});\n        this.props.history.push('/game/dashboard');\n    }\n\n    async componentDidMount() {\n        this.getUser();\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        this.getUser();\n    }\n\n    render() {\n        return (\n            <BaseContainer>\n                <Container>\n                    <h2>User: {this.state.userToBeShown ? this.state.userToBeShown.username : null} </h2>\n                    <div>\n                    {this.state.userToBeShown != null ? (\n                        <Profile user={this.state.userToBeShown}/>\n                    ) : null}\n                    </div>\n                    <div>\n                    {this.state.loggedInUserId === this.state.userToBeShownId ?\n                        <ButtonContainer>\n                            <Button onClick={() => {this.editProfile()}}>\n                                Edit your profile\n                            </Button>\n                        </ButtonContainer>\n                        : null}\n                    </div>\n                    <div>\n                        <ButtonContainer>\n                            <Button\n                                width=\"100%\"\n                                onClick={() => {\n                                    this.returnToDashboard();\n                                }}\n                            >\n                                Return to the Dashboard\n                            </Button>\n                        </ButtonContainer>\n                    </div>\n                </Container>\n            </BaseContainer>\n        );\n    }\n}\n\nexport default withRouter(UserProfile);\n","import React from 'react';\nimport styled from 'styled-components';\nimport { BaseContainer } from '../../helpers/layout';\nimport { api, handleError } from '../../helpers/api';\n//import Player from '../../views/Player';\n//import { Spinner } from '../../views/design/Spinner';\nimport { Button } from '../../views/design/Button';\nimport { withRouter } from 'react-router-dom';\n//import Profile from \"../../views/Profile\";\n//import Profile from \"../../views/Profile\";\n\nconst Container = styled(BaseContainer)`\n  color: white;\n  text-align: center;\n  flex-direction: column;\n`;\n\nconst Label = styled.label`\n  color: white;\n  margin-bottom: 10px;\n  text-transform: uppercase;\n`;\n\nconst InputField = styled.input`\n  &::placeholder {\n    color: rgba(255, 255, 255, 1.0);\n  }\n  height: 35px;\n  width: 300px;\n  padding-left: 15px;\n  margin-left: 15px;\n  border: none;\n  border-radius: 20px;\n  margin-bottom: 20px;\n  background: rgba(255, 255, 255, 0.2);\n  color: white;\n`;\n\nconst ButtonContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  margin-top: 20px;\n`;\n\nclass EditProfile extends React.Component {\n    constructor() {\n        super();\n        this.state = {\n            loggedInUserId: localStorage.getItem(\"userId\"),\n            username: null,\n            birthDate: null,\n            changesSaved: false,\n            testThing: false\n        };\n    }\n\n    saveChanges() {\n        try {\n            const requestBody = JSON.stringify({\n                username: this.state.username,\n                birthDate: this.state.birthDate\n            });\n            const url = '/users/' + this.state.loggedInUserId;\n            api.put(url, requestBody);\n            this.props.history.push('/game/dashboard/user');\n        } catch (e) {\n            alert(`Something went wrong while editing the profile: \\n${handleError(e)}`);\n        }\n    }\n\n    handleInputChange(key, value) {\n        // Example: if the key is username, this statement is the equivalent to the following one:\n        // this.setState({'username': value});\n        this.setState({[key]: value});\n    }\n\n    async componentDidMount() {}\n\n    render() {\n        return (\n            <BaseContainer>\n                <Container>\n                    <div>\n                    <Label>Username</Label>\n                    <InputField\n                        placeholder=\"Enter your new username here\"\n                        onChange={e => {\n                            this.handleInputChange('username', e.target.value);\n                        }}\n                    />\n                    </div>\n                    <div>\n                    <Label>Birth Date</Label>\n                    <InputField\n                        placeholder=\"Enter your birth date here\"\n                        onChange={e => {\n                            this.handleInputChange('birthDate', e.target.value);\n                        }}\n                    />\n                    </div>\n                    <div>\n                        <ButtonContainer>\n                            <Button\n                                width=\"100%\"\n                                onClick={() => {\n                                    this.saveChanges();\n                                }}\n                            >\n                                Save Changes\n                            </Button>\n                        </ButtonContainer>\n                    </div>\n                    <div>\n                        <ButtonContainer>\n                            <Button\n                                width=\"100%\"\n                                onClick={() => {\n                                    this.props.history.push('/game/dashboard/user');\n                                }}\n                            >\n                                Cancel\n                            </Button>\n                        </ButtonContainer>\n                    </div>\n                </Container>\n            </BaseContainer>\n        );\n    }\n}\n\nexport default withRouter(EditProfile);\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { Redirect, Route } from \"react-router-dom\";\nimport Game from \"../../game/Game\";\nimport UserProfile from \"../../userprofile/UserProfile\";\nimport EditProfile from \"../../editprofile/EditProfile\";\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nclass GameRouter extends React.Component {\n  render() {\n    /**\n     * \"this.props.base\" is \"/app\" because as been passed as a prop in the parent of GameRouter, i.e., App.js\n     */\n    return (\n      <Container>\n        <Route\n          exact\n          path={`${this.props.base}/dashboard`}\n          render={() => <Game />}\n        />\n        <Route\n            exact\n            path={`${this.props.base}/dashboard/user`}\n            render={() => <UserProfile />}\n        />\n          <Route\n              exact\n              path={`${this.props.base}/dashboard/user/edit`}\n              render={() => <EditProfile />}\n          />\n        <Route\n          exact\n          path={`${this.props.base}`}\n          render={() => <Redirect to={`${this.props.base}/dashboard`} />}\n        />\n      </Container>\n    );\n  }\n}\n/*\n* Don't forget to export your component!\n */\nexport default GameRouter;\n","import React from \"react\";\nimport { Redirect } from \"react-router-dom\";\n\n/**\n *\n * Another way to export directly your functional component.\n */\nexport const LoginGuard = props => {\n  if (!localStorage.getItem(\"token\")) {\n    return props.children;\n  }\n  // if user is already logged in, redirects to the main /app\n  return <Redirect to={\"/game\"} />;\n};\n","import React from 'react';\nimport styled from 'styled-components';\nimport { BaseContainer } from '../../helpers/layout';\nimport { api, handleError } from '../../helpers/api';\nimport User from '../shared/models/User';\n//import Game from \"../game/Game\";\nimport { withRouter } from 'react-router-dom';\nimport { Button } from '../../views/design/Button';\n\nconst FormContainer = styled.div`\n  margin-top: 2em;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  min-height: 300px;\n  justify-content: center;\n`;\n\nconst Form = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  width: 60%;\n  height: 400px;\n  font-size: 16px;\n  font-weight: 300;\n  padding-left: 37px;\n  padding-right: 37px;\n  border-radius: 5px;\n  background: linear-gradient(rgb(27, 124, 186), rgb(2, 46, 101));\n  transition: opacity 0.5s ease, transform 0.5s ease;\n`;\n\nconst InputField = styled.input`\n  &::placeholder {\n    color: rgba(255, 255, 255, 1.0);\n  }\n  height: 35px;\n  padding-left: 15px;\n  margin-left: -4px;\n  border: none;\n  border-radius: 20px;\n  margin-bottom: 20px;\n  background: rgba(255, 255, 255, 0.2);\n  color: white;\n`;\n\nconst Label = styled.label`\n  color: white;\n  margin-bottom: 10px;\n  text-transform: uppercase;\n`;\n\nconst ButtonContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  margin-top: 20px;\n`;\n\n/**\n * Classes in React allow you to have an internal state within the class and to have the React life-cycle for your component.\n * You should have a class (instead of a functional component) when:\n * - You need an internal state that cannot be achieved via props from other parent components\n * - You fetch data from the server (e.g., in componentDidMount())\n * - You want to access the DOM via Refs\n * https://reactjs.org/docs/react-component.html\n * @Class\n */\nclass Login extends React.Component {\n  /**\n   * If you don’t initialize the state and you don’t bind methods, you don’t need to implement a constructor for your React component.\n   * The constructor for a React component is called before it is mounted (rendered).\n   * In this case the initial state is defined in the constructor. The state is a JS object containing two fields: name and username\n   * These fields are then handled in the onChange() methods in the resp. InputFields\n   */\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: null,\n      username: null,\n      password: null,\n      loggedInUser: null\n    };\n  }\n  /**\n   * HTTP POST request is sent to the backend.\n   * If the request is successful, a new user is returned to the front-end\n   * and its token is stored in the localStorage.\n   */\n  async login() {\n    try {\n      const requestBody = JSON.stringify({\n        name: this.state.name,\n        username: this.state.username,\n        password: this.state.password\n      });\n      const response = await api.post('/login', requestBody);\n\n      // Get the returned user and update a new object.\n      const user = new User(response.data);\n\n      // Store the token into the local storage.\n      localStorage.setItem('token', user.token);\n      localStorage.setItem('userId', user.id);\n\n      // Login successfully worked --> navigate to the route /game in the GameRouter\n      this.props.history.push(`/game`);\n    } catch (error) {\n      alert(`Something went wrong during the login: \\n${handleError(error)}`);\n    }\n  }\n\n  /**\n   *  Every time the user enters something in the input field, the state gets updated.\n   * @param key (the key of the state for identifying the field that needs to be updated)\n   * @param value (the value that gets assigned to the identified state key)\n   */\n  handleInputChange(key, value) {\n    // Example: if the key is username, this statement is the equivalent to the following one:\n    // this.setState({'username': value});\n    this.setState({ [key]: value });\n  }\n\n  /**\n   * componentDidMount() is invoked immediately after a component is mounted (inserted into the tree).\n   * Initialization that requires DOM nodes should go here.\n   * If you need to load data from a remote endpoint, this is a good place to instantiate the network request.\n   * You may call setState() immediately in componentDidMount().\n   * It will trigger an extra rendering, but it will happen before the browser updates the screen.\n   */\n  componentDidMount() {}\n\n  render() {\n    return (\n      <BaseContainer>\n        <FormContainer>\n          <Form>\n            <Label>Username</Label>\n            <InputField\n              placeholder=\"Enter here..\"\n              onChange={e => {\n                this.handleInputChange('username', e.target.value);\n              }}\n            />\n            <Label>Name</Label>\n            <InputField\n                placeholder=\"Enter here..\"\n                onChange={e => {\n                  this.handleInputChange('name', e.target.value);\n                }}\n            />\n            <Label>Password</Label>\n            <InputField\n              placeholder=\"Enter here..\"\n              onChange={e => {\n                this.handleInputChange('password', e.target.value);\n              }}\n            />\n            <ButtonContainer>\n              <Button\n                disabled={!this.state.username || !this.state.password || !this.state.name}\n                width=\"75%\"\n                onClick={() => {\n                  this.login();\n                }}\n              >\n                Login\n              </Button>\n            </ButtonContainer>\n            <ButtonContainer>\n              <Button\n                  width=\"75%\"\n                  onClick={() => {\n                    this.props.history.push(`/registration`);\n                  }}\n              >\n                You don't have an account yet? Register here!\n              </Button>\n            </ButtonContainer>\n          </Form>\n        </FormContainer>\n      </BaseContainer>\n    );\n  }\n}\n\n/**\n * You can get access to the history object's properties via the withRouter.\n * withRouter will pass updated match, location, and history props to the wrapped component whenever it renders.\n */\nexport default withRouter(Login);\n","import React from 'react';\nimport styled from 'styled-components';\nimport { BaseContainer } from '../../helpers/layout';\nimport { api, handleError } from '../../helpers/api';\nimport User from '../shared/models/User';\nimport { withRouter } from 'react-router-dom';\nimport { Button } from '../../views/design/Button';\n\nconst FormContainer = styled.div`\n  margin-top: 2em;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  min-height: 300px;\n  justify-content: center;\n`;\n\nconst Form = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  width: 60%;\n  height: 400px;\n  font-size: 16px;\n  font-weight: 300;\n  padding-left: 37px;\n  padding-right: 37px;\n  border-radius: 5px;\n  background: linear-gradient(rgb(27, 124, 186), rgb(2, 46, 101));\n  transition: opacity 0.5s ease, transform 0.5s ease;\n`;\n\nconst InputField = styled.input`\n  &::placeholder {\n    color: rgba(255, 255, 255, 1.0);\n  }\n  height: 35px;\n  padding-left: 15px;\n  margin-left: -4px;\n  border: none;\n  border-radius: 20px;\n  margin-bottom: 20px;\n  background: rgba(255, 255, 255, 0.2);\n  color: white;\n`;\n\nconst Label = styled.label`\n  color: white;\n  margin-bottom: 10px;\n  text-transform: uppercase;\n`;\n\nconst ButtonContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  margin-top: 20px;\n`;\n\n/**\n * Classes in React allow you to have an internal state within the class and to have the React life-cycle for your component.\n * You should have a class (instead of a functional component) when:\n * - You need an internal state that cannot be achieved via props from other parent components\n * - You fetch data from the server (e.g., in componentDidMount())\n * - You want to access the DOM via Refs\n * https://reactjs.org/docs/react-component.html\n * @Class\n */\nclass Registration extends React.Component {\n    /**\n     * If you don’t initialize the state and you don’t bind methods, you don’t need to implement a constructor for your React component.\n     * The constructor for a React component is called before it is mounted (rendered).\n     * In this case the initial state is defined in the constructor. The state is a JS object containing two fields: name and username\n     * These fields are then handled in the onChange() methods in the resp. InputFields\n     */\n    constructor() {\n        super();\n        this.state = {\n            username: null,\n            name: null,\n            password: null\n        };\n    }\n    /**\n     * HTTP POST request is sent to the backend.\n     * If the request is successful, a new user is returned to the front-end\n     * and its token is stored in the localStorage.\n     */\n    async registration() {\n        try {\n            const requestBody = JSON.stringify({\n                username: this.state.username,\n                name: this.state.name,\n                password: this.state.password\n            });\n            const response = await api.post('/users', requestBody);\n\n            // Get the returned user and update a new object.\n            new User(response.data);\n\n            // Store the token into the local storage.\n            // localStorage.setItem('token', user.token);\n\n            // Registration successfully worked --> navigate to the route /login in the AppRouter\n            this.props.history.push(`/login`);\n        } catch (error) {\n            alert(`Something went wrong during the registration: \\n${handleError(error)}`);\n        }\n    }\n\n    /**\n     *  Every time the user enters something in the input field, the state gets updated.\n     * @param key (the key of the state for identifying the field that needs to be updated)\n     * @param value (the value that gets assigned to the identified state key)\n     */\n    handleInputChange(key, value) {\n        // Example: if the key is username, this statement is the equivalent to the following one:\n        // this.setState({'username': value});\n        this.setState({ [key]: value });\n    }\n\n    /**\n     * componentDidMount() is invoked immediately after a component is mounted (inserted into the tree).\n     * Initialization that requires DOM nodes should go here.\n     * If you need to load data from a remote endpoint, this is a good place to instantiate the network request.\n     * You may call setState() immediately in componentDidMount().\n     * It will trigger an extra rendering, but it will happen before the browser updates the screen.\n     */\n    componentDidMount() {}\n\n    render() {\n        return (\n            <BaseContainer>\n                <FormContainer>\n                    <Form>\n                        <Label>Username</Label>\n                        <InputField\n                            placeholder=\"Enter here..\"\n                            onChange={e => {\n                                this.handleInputChange('username', e.target.value);\n                            }}\n                        />\n                        <Label>Name</Label>\n                        <InputField\n                            placeholder=\"Enter here..\"\n                            onChange={e => {\n                                this.handleInputChange('name', e.target.value);\n                            }}\n                        />\n                        <Label>Password</Label>\n                        <InputField\n                            placeholder=\"Enter here..\"\n                            onChange={e => {\n                                this.handleInputChange('password', e.target.value);\n                            }}\n                        />\n                        <ButtonContainer>\n                            <Button\n                                disabled={!this.state.username || !this.state.password || !this.state.name}\n                                width=\"75%\"\n                                onClick={() => {\n                                    this.registration();\n                                }}\n                            >\n                                Register\n                            </Button>\n                        </ButtonContainer>\n                        <ButtonContainer>\n                            <Button\n                                width=\"75%\"\n                                onClick={() => {\n                                    this.props.history.push(`/login`);\n                                }}\n                            >\n                                You already have an account? Login here!\n                            </Button>\n                        </ButtonContainer>\n                    </Form>\n                </FormContainer>\n            </BaseContainer>\n        );\n    }\n}\n\n/**\n * You can get access to the history object's properties via the withRouter.\n * withRouter will pass updated match, location, and history props to the wrapped component whenever it renders.\n */\nexport default withRouter(Registration);\n","import React from \"react\";\nimport { BrowserRouter, Redirect, Route, Switch } from \"react-router-dom\";\nimport { GameGuard } from \"../routeProtectors/GameGuard\";\nimport GameRouter from \"./GameRouter\";\nimport { LoginGuard } from \"../routeProtectors/LoginGuard\";\nimport Login from \"../../login/Login\";\nimport Registration from \"../../registration/Registration\";\n\n/**\n * Main router of your application.\n * In the following class, different routes are rendered. In our case, there is a Login Route with matches the path \"/login\"\n * and another Router that matches the route \"/game\".\n * The main difference between these two routes is the following:\n * /login renders another component without any sub-route\n * /game renders a Router that contains other sub-routes that render in turn other react components\n * Documentation about routing in React: https://reacttraining.com/react-router/web/guides/quick-start\n */\nclass AppRouter extends React.Component {\n  render() {\n    return (\n      <BrowserRouter>\n        <Switch>\n          <div>\n            <Route\n              path=\"/game\"\n              render={() => (\n                <GameGuard>\n                  <GameRouter base={\"/game\"} />\n                </GameGuard>\n              )}\n            />\n            <Route\n              path=\"/login\"\n              exact\n              render={() => (\n                <LoginGuard>\n                  <Login />\n                </LoginGuard>\n              )}\n            />\n            <Route\n                path=\"/registration\"\n                exact\n                render={() => (\n                    <Registration />\n                    )}\n              />\n            <Route path=\"/\" exact render={() => <Redirect to={\"/game\"} />} />\n          </div>\n        </Switch>\n      </BrowserRouter>\n    );\n  }\n}\n/*\n* Don't forget to export your component!\n */\nexport default AppRouter;\n","import React, { Component } from \"react\";\nimport Header from \"./views/Header\";\nimport AppRouter from \"./components/shared/routers/AppRouter\";\n\n/**\n * Happy coding!\n * React Template by Lucas Pelloni\n */\nclass App extends Component {\n  render() {\n    return (\n      <div>\n        <Header height={\"100\"} />\n        <AppRouter />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\n/**\n * This is the entry point of your React application where the root element is in the public/index.html.\n * We call this a “root” DOM node because everything inside it will be managed by React DOM.\n * Applications built with just React usually have a single root DOM node.\n * More: https://reactjs.org/docs/rendering-elements.html\n */\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}