{"ast":null,"code":"import axios from 'axios';\nimport { getDomain } from './getDomain';\nexport var api = axios.create({\n  baseURL: getDomain(),\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\nexport var handleError = function handleError(error) {\n  if (error.response) {\n    var info = '';\n    info += \"\\nrequest to: \".concat(error.response.request.responseURL);\n    info += \"\\nstatus code: \".concat(error.response.status);\n    info += \"\\nstatus text: \".concat(error.statusText);\n    info += \"\\nerror: \".concat(error.response.data.error);\n    info += \"\\nerror message: \".concat(error.response.data.message);\n    console.log('The request was made and answered but was unsuccessful.', error.response);\n    return info;\n  } else {\n    if (error.message.match(/Network Error/)) {\n      alert('The server cannot be reached. Did you start it?');\n    }\n\n    console.log('Something else happened.', error);\n    return error.message;\n  }\n};","map":{"version":3,"sources":["C:/Users/lulo1/Desktop/Studium/20 FS/SOPRA/KnowYourCity/Github/SOPRA_FS20_Group19_Client/src/helpers/api.js"],"names":["axios","getDomain","api","create","baseURL","headers","handleError","error","response","info","request","responseURL","status","statusText","data","message","console","log","match","alert"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,aAA1B;AAEA,OAAO,IAAMC,GAAG,GAAGF,KAAK,CAACG,MAAN,CAAa;AAC9BC,EAAAA,OAAO,EAAEH,SAAS,EADY;AAE9BI,EAAAA,OAAO,EAAE;AAAE,oBAAgB;AAAlB;AAFqB,CAAb,CAAZ;AAKP,OAAO,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAAAC,KAAK,EAAI;AAClC,MAAIA,KAAK,CAACC,QAAV,EAAoB;AAClB,QAAIC,IAAI,GAAG,EAAX;AACAA,IAAAA,IAAI,4BAAqBF,KAAK,CAACC,QAAN,CAAeE,OAAf,CAAuBC,WAA5C,CAAJ;AACAF,IAAAA,IAAI,6BAAsBF,KAAK,CAACC,QAAN,CAAeI,MAArC,CAAJ;AACAH,IAAAA,IAAI,6BAAsBF,KAAK,CAACM,UAA5B,CAAJ;AACAJ,IAAAA,IAAI,uBAAgBF,KAAK,CAACC,QAAN,CAAeM,IAAf,CAAoBP,KAApC,CAAJ;AACAE,IAAAA,IAAI,+BAAwBF,KAAK,CAACC,QAAN,CAAeM,IAAf,CAAoBC,OAA5C,CAAJ;AAEAC,IAAAA,OAAO,CAACC,GAAR,CAAY,yDAAZ,EAAuEV,KAAK,CAACC,QAA7E;AACA,WAAOC,IAAP;AACD,GAVD,MAUO;AACL,QAAIF,KAAK,CAACQ,OAAN,CAAcG,KAAd,CAAoB,eAApB,CAAJ,EAA0C;AACxCC,MAAAA,KAAK,CAAC,iDAAD,CAAL;AACD;;AAEDH,IAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ,EAAwCV,KAAxC;AACA,WAAOA,KAAK,CAACQ,OAAb;AACD;AACF,CAnBM","sourcesContent":["import axios from 'axios';\r\nimport { getDomain } from './getDomain';\r\n\r\nexport const api = axios.create({\r\n  baseURL: getDomain(),\r\n  headers: { 'Content-Type': 'application/json' }\r\n});\r\n\r\nexport const handleError = error => {\r\n  if (error.response) {\r\n    let info = '';\r\n    info += `\\nrequest to: ${error.response.request.responseURL}`;\r\n    info += `\\nstatus code: ${error.response.status}`;\r\n    info += `\\nstatus text: ${error.statusText}`;\r\n    info += `\\nerror: ${error.response.data.error}`;\r\n    info += `\\nerror message: ${error.response.data.message}`;\r\n\r\n    console.log('The request was made and answered but was unsuccessful.', error.response);\r\n    return info;\r\n  } else {\r\n    if (error.message.match(/Network Error/)) {\r\n      alert('The server cannot be reached. Did you start it?');\r\n    }\r\n\r\n    console.log('Something else happened.', error);\r\n    return error.message;\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}