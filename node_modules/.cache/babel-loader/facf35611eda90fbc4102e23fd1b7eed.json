{"ast":null,"code":"import _taggedTemplateLiteral from\"/Users/luisknufinke/Documents/UZH/04 - FS20/Softwarepraktikum/Milestone 1 Individual/sopra-fs20-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";function _templateObject2(){var data=_taggedTemplateLiteral([\"\\n  font-weight: bold;\\n  color: white;\\n  text-align: center;\\n\"]);_templateObject2=function _templateObject2(){return data;};return data;}function _templateObject(){var data=_taggedTemplateLiteral([\"\\n  height: \",\"px;\\n  background: \",\";\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n\"]);_templateObject=function _templateObject(){return data;};return data;}import React from\"react\";import styled from\"styled-components\";import{ReactLogo}from\"./ReactLogo\";/**\n * Using styled-components you can visual HTML primitives and use props with it!\n * The idea behind this external package, it's to have a better structure and overview for your HTML and CSS\n * Using styled-components, you can have styling conditions using the following syntax: ${props => ...}\n * https://www.styled-components.com/\n */var Container=styled.div(_templateObject(),function(props){return props.height;},function(props){return props.background;});var Title=styled.h1(_templateObject2());/**\n * This is an example of a Functional and stateless component (View) in React. Functional components are not classes and thus don't handle internal state changes.\n * Conceptually, components are like JavaScript functions. They accept arbitrary inputs (called “props”) and return React elements describing what should appear on the screen.\n * They are reusable pieces, and think about each piece in isolation.\n * Functional components have to return always something. However, they don't need a \"render()\" method.\n * https://reactjs.org/docs/components-and-props.html\n * @FunctionalComponent\n */var Header=function Header(props){return React.createElement(Container,{height:props.height},React.createElement(Title,null,\"SoPra FS20 rocks with React!\"),React.createElement(ReactLogo,{width:60,height:60}));};/**\n * Don't forget to export your component!\n */export default Header;","map":{"version":3,"sources":["/Users/luisknufinke/Documents/UZH/04 - FS20/Softwarepraktikum/Milestone 1 Individual/sopra-fs20-client/src/views/Header.js"],"names":["React","styled","ReactLogo","Container","div","props","height","background","Title","h1","Header"],"mappings":"4qBAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,MAAP,KAAmB,mBAAnB,CACA,OAASC,SAAT,KAA0B,aAA1B,CAEA;;;;;GAMA,GAAMC,CAAAA,SAAS,CAAGF,MAAM,CAACG,GAAV,mBACH,SAAAC,KAAK,QAAIA,CAAAA,KAAK,CAACC,MAAV,EADF,CAEC,SAAAD,KAAK,QAAIA,CAAAA,KAAK,CAACE,UAAV,EAFN,CAAf,CAQA,GAAMC,CAAAA,KAAK,CAAGP,MAAM,CAACQ,EAAV,oBAAX,CAKA;;;;;;;GAQA,GAAMC,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,CAAAL,KAAK,CAAI,CACtB,MACE,qBAAC,SAAD,EAAW,MAAM,CAAEA,KAAK,CAACC,MAAzB,EACE,oBAAC,KAAD,qCADF,CAEE,oBAAC,SAAD,EAAW,KAAK,CAAE,EAAlB,CAAsB,MAAM,CAAE,EAA9B,EAFF,CADF,CAMD,CAPD,CASA;;GAGA,cAAeI,CAAAA,MAAf","sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\nimport { ReactLogo } from \"./ReactLogo\";\n\n/**\n * Using styled-components you can visual HTML primitives and use props with it!\n * The idea behind this external package, it's to have a better structure and overview for your HTML and CSS\n * Using styled-components, you can have styling conditions using the following syntax: ${props => ...}\n * https://www.styled-components.com/\n */\nconst Container = styled.div`\n  height: ${props => props.height}px;\n  background: ${props => props.background};\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Title = styled.h1`\n  font-weight: bold;\n  color: white;\n  text-align: center;\n`;\n/**\n * This is an example of a Functional and stateless component (View) in React. Functional components are not classes and thus don't handle internal state changes.\n * Conceptually, components are like JavaScript functions. They accept arbitrary inputs (called “props”) and return React elements describing what should appear on the screen.\n * They are reusable pieces, and think about each piece in isolation.\n * Functional components have to return always something. However, they don't need a \"render()\" method.\n * https://reactjs.org/docs/components-and-props.html\n * @FunctionalComponent\n */\nconst Header = props => {\n  return (\n    <Container height={props.height}>\n      <Title>SoPra FS20 rocks with React!</Title>\n      <ReactLogo width={60} height={60} />\n    </Container>\n  );\n};\n\n/**\n * Don't forget to export your component!\n */\nexport default Header;\n"]},"metadata":{},"sourceType":"module"}