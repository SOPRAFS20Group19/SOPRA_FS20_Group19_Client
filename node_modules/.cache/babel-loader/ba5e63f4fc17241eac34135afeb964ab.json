{"ast":null,"code":"import _defineProperty from \"/Users/luisknufinke/Documents/UZH/04 - FS20/Softwarepraktikum/Milestone 1 Individual/sopra-fs20-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _regeneratorRuntime from \"/Users/luisknufinke/Documents/UZH/04 - FS20/Softwarepraktikum/Milestone 1 Individual/sopra-fs20-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/luisknufinke/Documents/UZH/04 - FS20/Softwarepraktikum/Milestone 1 Individual/sopra-fs20-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/luisknufinke/Documents/UZH/04 - FS20/Softwarepraktikum/Milestone 1 Individual/sopra-fs20-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/luisknufinke/Documents/UZH/04 - FS20/Softwarepraktikum/Milestone 1 Individual/sopra-fs20-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/luisknufinke/Documents/UZH/04 - FS20/Softwarepraktikum/Milestone 1 Individual/sopra-fs20-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/luisknufinke/Documents/UZH/04 - FS20/Softwarepraktikum/Milestone 1 Individual/sopra-fs20-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/luisknufinke/Documents/UZH/04 - FS20/Softwarepraktikum/Milestone 1 Individual/sopra-fs20-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _taggedTemplateLiteral from \"/Users/luisknufinke/Documents/UZH/04 - FS20/Softwarepraktikum/Milestone 1 Individual/sopra-fs20-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/luisknufinke/Documents/UZH/04 - FS20/Softwarepraktikum/Milestone 1 Individual/sopra-fs20-client/src/components/registration/Registration.js\";\n\nfunction _templateObject5() {\n  var data = _taggedTemplateLiteral([\"\\n  display: flex;\\n  justify-content: center;\\n  margin-top: 20px;\\n\"]);\n\n  _templateObject5 = function _templateObject5() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject4() {\n  var data = _taggedTemplateLiteral([\"\\n  color: white;\\n  margin-bottom: 10px;\\n  text-transform: uppercase;\\n\"]);\n\n  _templateObject4 = function _templateObject4() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteral([\"\\n  &::placeholder {\\n    color: rgba(255, 255, 255, 1.0);\\n  }\\n  height: 35px;\\n  padding-left: 15px;\\n  margin-left: -4px;\\n  border: none;\\n  border-radius: 20px;\\n  margin-bottom: 20px;\\n  background: rgba(255, 255, 255, 0.2);\\n  color: white;\\n\"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n  display: flex;\\n  flex-direction: column;\\n  justify-content: center;\\n  width: 60%;\\n  height: 375px;\\n  font-size: 16px;\\n  font-weight: 300;\\n  padding-left: 37px;\\n  padding-right: 37px;\\n  border-radius: 5px;\\n  background: linear-gradient(rgb(27, 124, 186), rgb(2, 46, 101));\\n  transition: opacity 0.5s ease, transform 0.5s ease;\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  margin-top: 2em;\\n  display: flex;\\n  flex-direction: column;\\n  align-items: center;\\n  min-height: 300px;\\n  justify-content: center;\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from 'react';\nimport styled from 'styled-components';\nimport { BaseContainer } from '../../helpers/layout';\nimport { api, handleError } from '../../helpers/api';\nimport User from '../shared/models/User';\nimport { withRouter } from 'react-router-dom';\nimport { Button } from '../../views/design/Button';\nvar FormContainer = styled.div(_templateObject());\nvar Form = styled.div(_templateObject2());\nvar InputField = styled.input(_templateObject3());\nvar Label = styled.label(_templateObject4());\nvar ButtonContainer = styled.div(_templateObject5());\n/**\n * Classes in React allow you to have an internal state within the class and to have the React life-cycle for your component.\n * You should have a class (instead of a functional component) when:\n * - You need an internal state that cannot be achieved via props from other parent components\n * - You fetch data from the server (e.g., in componentDidMount())\n * - You want to access the DOM via Refs\n * https://reactjs.org/docs/react-component.html\n * @Class\n */\n\nvar Registration =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Registration, _React$Component);\n\n  /**\n   * If you don’t initialize the state and you don’t bind methods, you don’t need to implement a constructor for your React component.\n   * The constructor for a React component is called before it is mounted (rendered).\n   * In this case the initial state is defined in the constructor. The state is a JS object containing two fields: name and username\n   * These fields are then handled in the onChange() methods in the resp. InputFields\n   */\n  function Registration() {\n    var _this;\n\n    _classCallCheck(this, Registration);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Registration).call(this));\n    _this.state = {\n      username: null,\n      name: null,\n      password: null\n    };\n    return _this;\n  }\n  /**\n   * HTTP POST request is sent to the backend.\n   * If the request is successful, a new user is returned to the front-end\n   * and its token is stored in the localStorage.\n   */\n\n\n  _createClass(Registration, [{\n    key: \"registration\",\n    value: function () {\n      var _registration = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var requestBody, response;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n                requestBody = JSON.stringify({\n                  username: this.state.username,\n                  name: this.state.name,\n                  password: this.state.password\n                });\n                _context.next = 4;\n                return api.post('/users', requestBody);\n\n              case 4:\n                response = _context.sent;\n                // Get the returned user and update a new object.\n                new User(response.data); // Store the token into the local storage.\n                // localStorage.setItem('token', user.token);\n                // Registration successfully worked --> navigate to the route /login in the AppRouter\n\n                this.props.history.push(\"/login\");\n                _context.next = 12;\n                break;\n\n              case 9:\n                _context.prev = 9;\n                _context.t0 = _context[\"catch\"](0);\n                alert(\"Something went wrong during the registration: \\n\".concat(handleError(_context.t0)));\n\n              case 12:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[0, 9]]);\n      }));\n\n      function registration() {\n        return _registration.apply(this, arguments);\n      }\n\n      return registration;\n    }()\n    /**\n     *  Every time the user enters something in the input field, the state gets updated.\n     * @param key (the key of the state for identifying the field that needs to be updated)\n     * @param value (the value that gets assigned to the identified state key)\n     */\n\n  }, {\n    key: \"handleInputChange\",\n    value: function handleInputChange(key, value) {\n      // Example: if the key is username, this statement is the equivalent to the following one:\n      // this.setState({'username': value});\n      this.setState(_defineProperty({}, key, value));\n    }\n    /**\n     * componentDidMount() is invoked immediately after a component is mounted (inserted into the tree).\n     * Initialization that requires DOM nodes should go here.\n     * If you need to load data from a remote endpoint, this is a good place to instantiate the network request.\n     * You may call setState() immediately in componentDidMount().\n     * It will trigger an extra rendering, but it will happen before the browser updates the screen.\n     */\n\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {}\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(BaseContainer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }, React.createElement(FormContainer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }, React.createElement(Form, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }, React.createElement(Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }, \"Username\"), React.createElement(InputField, {\n        placeholder: \"Enter here..\",\n        onChange: function onChange(e) {\n          _this2.handleInputChange('username', e.target.value);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }), React.createElement(Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }, \"Name\"), React.createElement(InputField, {\n        placeholder: \"Enter here..\",\n        onChange: function onChange(e) {\n          _this2.handleInputChange('name', e.target.value);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      }), React.createElement(Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      }, \"Password\"), React.createElement(InputField, {\n        placeholder: \"Enter here..\",\n        onChange: function onChange(e) {\n          _this2.handleInputChange('password', e.target.value);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      }), React.createElement(ButtonContainer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      }, React.createElement(Button, {\n        disabled: !this.state.username || !this.state.name,\n        width: \"50%\",\n        onClick: function onClick() {\n          _this2.registration();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }, \"Register\")), React.createElement(ButtonContainer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167\n        },\n        __self: this\n      }, React.createElement(Button, {\n        width: \"50%\",\n        onClick: function onClick() {\n          _this2.props.history.push(\"/login\");\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168\n        },\n        __self: this\n      }, \"Login here\")))));\n    }\n  }]);\n\n  return Registration;\n}(React.Component);\n/**\n * You can get access to the history object's properties via the withRouter.\n * withRouter will pass updated match, location, and history props to the wrapped component whenever it renders.\n */\n\n\nexport default withRouter(Registration);","map":{"version":3,"sources":["/Users/luisknufinke/Documents/UZH/04 - FS20/Softwarepraktikum/Milestone 1 Individual/sopra-fs20-client/src/components/registration/Registration.js"],"names":["React","styled","BaseContainer","api","handleError","User","withRouter","Button","FormContainer","div","Form","InputField","input","Label","label","ButtonContainer","Registration","state","username","name","password","requestBody","JSON","stringify","post","response","data","props","history","push","alert","key","value","setState","e","handleInputChange","target","registration","Component"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,aAAT,QAA8B,sBAA9B;AACA,SAASC,GAAT,EAAcC,WAAd,QAAiC,mBAAjC;AACA,OAAOC,IAAP,MAAiB,uBAAjB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,MAAT,QAAuB,2BAAvB;AAEA,IAAMC,aAAa,GAAGP,MAAM,CAACQ,GAAV,mBAAnB;AASA,IAAMC,IAAI,GAAGT,MAAM,CAACQ,GAAV,oBAAV;AAeA,IAAME,UAAU,GAAGV,MAAM,CAACW,KAAV,oBAAhB;AAcA,IAAMC,KAAK,GAAGZ,MAAM,CAACa,KAAV,oBAAX;AAMA,IAAMC,eAAe,GAAGd,MAAM,CAACQ,GAAV,oBAArB;AAMA;;;;;;;;;;IASMO,Y;;;;;AACF;;;;;;AAMA,0BAAc;AAAA;;AAAA;;AACV;AACA,UAAKC,KAAL,GAAa;AACTC,MAAAA,QAAQ,EAAE,IADD;AAETC,MAAAA,IAAI,EAAE,IAFG;AAGTC,MAAAA,QAAQ,EAAE;AAHD,KAAb;AAFU;AAOb;AACD;;;;;;;;;;;;;;;;;;;AAOcC,gBAAAA,W,GAAcC,IAAI,CAACC,SAAL,CAAe;AAC/BL,kBAAAA,QAAQ,EAAE,KAAKD,KAAL,CAAWC,QADU;AAE/BC,kBAAAA,IAAI,EAAE,KAAKF,KAAL,CAAWE,IAFc;AAG/BC,kBAAAA,QAAQ,EAAE,KAAKH,KAAL,CAAWG;AAHU,iBAAf,C;;uBAKGjB,GAAG,CAACqB,IAAJ,CAAS,QAAT,EAAmBH,WAAnB,C;;;AAAjBI,gBAAAA,Q;AAEN;AACA,oBAAIpB,IAAJ,CAASoB,QAAQ,CAACC,IAAlB,E,CAEA;AACA;AAEA;;AACA,qBAAKC,KAAL,CAAWC,OAAX,CAAmBC,IAAnB;;;;;;;AAEAC,gBAAAA,KAAK,2DAAoD1B,WAAW,aAA/D,EAAL;;;;;;;;;;;;;;;;AAIR;;;;;;;;sCAKkB2B,G,EAAKC,K,EAAO;AAC1B;AACA;AACA,WAAKC,QAAL,qBAAiBF,GAAjB,EAAuBC,KAAvB;AACH;AAED;;;;;;;;;;wCAOoB,CAAE;;;6BAEb;AAAA;;AACL,aACI,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,EAEI,oBAAC,UAAD;AACI,QAAA,WAAW,EAAC,cADhB;AAEI,QAAA,QAAQ,EAAE,kBAAAE,CAAC,EAAI;AACX,UAAA,MAAI,CAACC,iBAAL,CAAuB,UAAvB,EAAmCD,CAAC,CAACE,MAAF,CAASJ,KAA5C;AACH,SAJL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,EAQI,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBARJ,EASI,oBAAC,UAAD;AACI,QAAA,WAAW,EAAC,cADhB;AAEI,QAAA,QAAQ,EAAE,kBAAAE,CAAC,EAAI;AACX,UAAA,MAAI,CAACC,iBAAL,CAAuB,MAAvB,EAA+BD,CAAC,CAACE,MAAF,CAASJ,KAAxC;AACH,SAJL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QATJ,EAeI,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAfJ,EAgBI,oBAAC,UAAD;AACI,QAAA,WAAW,EAAC,cADhB;AAEI,QAAA,QAAQ,EAAE,kBAAAE,CAAC,EAAI;AACX,UAAA,MAAI,CAACC,iBAAL,CAAuB,UAAvB,EAAmCD,CAAC,CAACE,MAAF,CAASJ,KAA5C;AACH,SAJL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAhBJ,EAsBI,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,MAAD;AACI,QAAA,QAAQ,EAAE,CAAC,KAAKf,KAAL,CAAWC,QAAZ,IAAwB,CAAC,KAAKD,KAAL,CAAWE,IADlD;AAEI,QAAA,KAAK,EAAC,KAFV;AAGI,QAAA,OAAO,EAAE,mBAAM;AACX,UAAA,MAAI,CAACkB,YAAL;AACH,SALL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,CAtBJ,EAiCI,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,MAAD;AACI,QAAA,KAAK,EAAC,KADV;AAEI,QAAA,OAAO,EAAE,mBAAM;AACX,UAAA,MAAI,CAACV,KAAL,CAAWC,OAAX,CAAmBC,IAAnB;AACH,SAJL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,CAjCJ,CADJ,CADJ,CADJ;AAkDH;;;;EAjHsB7B,KAAK,CAACsC,S;AAoHjC;;;;;;AAIA,eAAehC,UAAU,CAACU,YAAD,CAAzB","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\nimport { BaseContainer } from '../../helpers/layout';\nimport { api, handleError } from '../../helpers/api';\nimport User from '../shared/models/User';\nimport { withRouter } from 'react-router-dom';\nimport { Button } from '../../views/design/Button';\n\nconst FormContainer = styled.div`\n  margin-top: 2em;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  min-height: 300px;\n  justify-content: center;\n`;\n\nconst Form = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  width: 60%;\n  height: 375px;\n  font-size: 16px;\n  font-weight: 300;\n  padding-left: 37px;\n  padding-right: 37px;\n  border-radius: 5px;\n  background: linear-gradient(rgb(27, 124, 186), rgb(2, 46, 101));\n  transition: opacity 0.5s ease, transform 0.5s ease;\n`;\n\nconst InputField = styled.input`\n  &::placeholder {\n    color: rgba(255, 255, 255, 1.0);\n  }\n  height: 35px;\n  padding-left: 15px;\n  margin-left: -4px;\n  border: none;\n  border-radius: 20px;\n  margin-bottom: 20px;\n  background: rgba(255, 255, 255, 0.2);\n  color: white;\n`;\n\nconst Label = styled.label`\n  color: white;\n  margin-bottom: 10px;\n  text-transform: uppercase;\n`;\n\nconst ButtonContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  margin-top: 20px;\n`;\n\n/**\n * Classes in React allow you to have an internal state within the class and to have the React life-cycle for your component.\n * You should have a class (instead of a functional component) when:\n * - You need an internal state that cannot be achieved via props from other parent components\n * - You fetch data from the server (e.g., in componentDidMount())\n * - You want to access the DOM via Refs\n * https://reactjs.org/docs/react-component.html\n * @Class\n */\nclass Registration extends React.Component {\n    /**\n     * If you don’t initialize the state and you don’t bind methods, you don’t need to implement a constructor for your React component.\n     * The constructor for a React component is called before it is mounted (rendered).\n     * In this case the initial state is defined in the constructor. The state is a JS object containing two fields: name and username\n     * These fields are then handled in the onChange() methods in the resp. InputFields\n     */\n    constructor() {\n        super();\n        this.state = {\n            username: null,\n            name: null,\n            password: null\n        };\n    }\n    /**\n     * HTTP POST request is sent to the backend.\n     * If the request is successful, a new user is returned to the front-end\n     * and its token is stored in the localStorage.\n     */\n    async registration() {\n        try {\n            const requestBody = JSON.stringify({\n                username: this.state.username,\n                name: this.state.name,\n                password: this.state.password\n            });\n            const response = await api.post('/users', requestBody);\n\n            // Get the returned user and update a new object.\n            new User(response.data);\n\n            // Store the token into the local storage.\n            // localStorage.setItem('token', user.token);\n\n            // Registration successfully worked --> navigate to the route /login in the AppRouter\n            this.props.history.push(`/login`);\n        } catch (error) {\n            alert(`Something went wrong during the registration: \\n${handleError(error)}`);\n        }\n    }\n\n    /**\n     *  Every time the user enters something in the input field, the state gets updated.\n     * @param key (the key of the state for identifying the field that needs to be updated)\n     * @param value (the value that gets assigned to the identified state key)\n     */\n    handleInputChange(key, value) {\n        // Example: if the key is username, this statement is the equivalent to the following one:\n        // this.setState({'username': value});\n        this.setState({ [key]: value });\n    }\n\n    /**\n     * componentDidMount() is invoked immediately after a component is mounted (inserted into the tree).\n     * Initialization that requires DOM nodes should go here.\n     * If you need to load data from a remote endpoint, this is a good place to instantiate the network request.\n     * You may call setState() immediately in componentDidMount().\n     * It will trigger an extra rendering, but it will happen before the browser updates the screen.\n     */\n    componentDidMount() {}\n\n    render() {\n        return (\n            <BaseContainer>\n                <FormContainer>\n                    <Form>\n                        <Label>Username</Label>\n                        <InputField\n                            placeholder=\"Enter here..\"\n                            onChange={e => {\n                                this.handleInputChange('username', e.target.value);\n                            }}\n                        />\n                        <Label>Name</Label>\n                        <InputField\n                            placeholder=\"Enter here..\"\n                            onChange={e => {\n                                this.handleInputChange('name', e.target.value);\n                            }}\n                        />\n                        <Label>Password</Label>\n                        <InputField\n                            placeholder=\"Enter here..\"\n                            onChange={e => {\n                                this.handleInputChange('password', e.target.value);\n                            }}\n                        />\n                        <ButtonContainer>\n                            <Button\n                                disabled={!this.state.username || !this.state.name}\n                                width=\"50%\"\n                                onClick={() => {\n                                    this.registration();\n                                }}\n                            >\n                                Register\n                            </Button>\n                        </ButtonContainer>\n                        <ButtonContainer>\n                            <Button\n                                width=\"50%\"\n                                onClick={() => {\n                                    this.props.history.push(`/login`);\n                                }}\n                            >\n                                Login here\n                            </Button>\n                        </ButtonContainer>\n                    </Form>\n                </FormContainer>\n            </BaseContainer>\n        );\n    }\n}\n\n/**\n * You can get access to the history object's properties via the withRouter.\n * withRouter will pass updated match, location, and history props to the wrapped component whenever it renders.\n */\nexport default withRouter(Registration);\n"]},"metadata":{},"sourceType":"module"}