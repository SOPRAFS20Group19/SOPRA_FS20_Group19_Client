{"ast":null,"code":"import { isProduction } from './isProduction';\n/**\n * This helper function returns the current domain of the API.\n * If the environment is production, the production Heroku URL will be returned.\n * Otherwise, the link localhost:8080 will be returned (Spring server default port).\n * @returns {string}\n */\n\nexport var getDomain = function getDomain() {\n  var prodUrl = 'https://sopra-fs20-group-19-server.herokuapp.com'; // TODO: insert your groups heroku prod url for server (once deployed)\n\n  var devUrl = 'http://localhost:8080';\n  return isProduction() ? prodUrl : devUrl;\n};","map":{"version":3,"sources":["/Users/timuni/Documents/4. Semester/SoPra/Know your City/Client/SOPRA_FS20_Group19_Client/src/helpers/getDomain.js"],"names":["isProduction","getDomain","prodUrl","devUrl"],"mappings":"AAAA,SAASA,YAAT,QAA6B,gBAA7B;AAEA;;;;;;;AAMA,OAAO,IAAMC,SAAS,GAAG,SAAZA,SAAY,GAAM;AAC7B,MAAMC,OAAO,GAAG,kDAAhB,CAD6B,CACuC;;AACpE,MAAMC,MAAM,GAAG,uBAAf;AAEA,SAAOH,YAAY,KAAKE,OAAL,GAAeC,MAAlC;AACD,CALM","sourcesContent":["import { isProduction } from './isProduction';\n\n/**\n * This helper function returns the current domain of the API.\n * If the environment is production, the production Heroku URL will be returned.\n * Otherwise, the link localhost:8080 will be returned (Spring server default port).\n * @returns {string}\n */\nexport const getDomain = () => {\n  const prodUrl = 'https://sopra-fs20-group-19-server.herokuapp.com'; // TODO: insert your groups heroku prod url for server (once deployed)\n  const devUrl = 'http://localhost:8080';\n\n  return isProduction() ? prodUrl : devUrl;\n};\n"]},"metadata":{},"sourceType":"module"}