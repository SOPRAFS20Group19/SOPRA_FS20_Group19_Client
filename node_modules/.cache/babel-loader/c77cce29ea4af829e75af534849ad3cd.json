{"ast":null,"code":"import _slicedToArray from \"/Users/timuni/Documents/4. Semester/SoPra/Know your City/Client/SOPRA_FS20_Group19_Client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/timuni/Documents/4. Semester/SoPra/Know your City/Client/SOPRA_FS20_Group19_Client/src/components/maps/Maps.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { withGoogleMap, withScriptjs, GoogleMap, Marker, InfoWindow } from \"react-google-maps\";\nimport * as brunnenData from \"./data/wvz_brunnen.json\";\nimport mapStyles from \"./mapStyles\";\n\nfunction Map() {\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      selectedBrunnen = _useState2[0],\n      setSelectedBrunnen = _useState2[1];\n\n  useEffect(function () {\n    var listener = function listener(e) {\n      if (e.key === \"Escape\") {\n        setSelectedBrunnen(null);\n      }\n    };\n\n    window.addEventListener(\"keydown\", listener);\n    return function () {\n      window.removeEventListener(\"keydown\", listener);\n    };\n  }, []);\n  return React.createElement(GoogleMap, {\n    defaultZoom: 15,\n    defaultCenter: {\n      lat: 47.366950,\n      lng: 8.547200\n    },\n    defaultOptions: {\n      styles: mapStyles\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, brunnenData.features.map(function (brunnen) {\n    return React.createElement(Marker, {\n      key: brunnen.properties.objectid,\n      position: {\n        lat: brunnen.geometry.coordinates[1],\n        lng: brunnen.geometry.coordinates[0]\n      },\n      onClick: function onClick() {\n        setSelectedBrunnen(brunnen);\n      },\n      onMouseOver: function onMouseOver() {\n        setSelectedBrunnen(brunnen);\n      }\n      /*\n      AN ALLE: hier können wir das icon ändern. d.h. der rote \"Tropfen\" wird dann ein Bild/Symbol unserer Wahl\n       icon={{\n          url: `/skateboarding.svg`,\n          scaledSize: new window.google.maps.Size(25, 25)\n      }}\n       */\n      ,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    });\n  }), selectedBrunnen && React.createElement(InfoWindow, {\n    onCloseClick: function onCloseClick() {\n      setSelectedBrunnen(null);\n    },\n    position: {\n      lat: selectedBrunnen.geometry.coordinates[1],\n      lng: selectedBrunnen.geometry.coordinates[0]\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, \"Art des Brunnens:\" + selectedBrunnen.properties.art_txt), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, \"Baujahr:\" + selectedBrunnen.properties.baujahr))));\n}\n\nvar MapWrapped = withScriptjs(withGoogleMap(Map));\nexport default function Maps() {\n  return React.createElement(\"div\", {\n    style: {\n      width: \"100vw\",\n      height: \"100vh\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, React.createElement(MapWrapped, {\n    googleMapURL: \"https://maps.googleapis.com/maps/api/js?v=3.exp&libraries=geometry,drawing,places&key=AIzaSyDdG-nTEZ_bGS064sMlgL_dBdA4uZ2h5c0\",\n    loadingElement: React.createElement(\"div\", {\n      style: {\n        height: \"100%\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }),\n    containerElement: React.createElement(\"div\", {\n      style: {\n        height: \"100%\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }),\n    mapElement: React.createElement(\"div\", {\n      style: {\n        height: \"100%\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }));\n}","map":{"version":3,"sources":["/Users/timuni/Documents/4. Semester/SoPra/Know your City/Client/SOPRA_FS20_Group19_Client/src/components/maps/Maps.js"],"names":["React","useState","useEffect","withGoogleMap","withScriptjs","GoogleMap","Marker","InfoWindow","brunnenData","mapStyles","Map","selectedBrunnen","setSelectedBrunnen","listener","e","key","window","addEventListener","removeEventListener","lat","lng","styles","features","map","brunnen","properties","objectid","geometry","coordinates","art_txt","baujahr","MapWrapped","Maps","width","height"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport {\n    withGoogleMap,\n    withScriptjs,\n    GoogleMap,\n    Marker,\n    InfoWindow\n} from \"react-google-maps\";\nimport * as brunnenData from \"./data/wvz_brunnen.json\";\nimport mapStyles from \"./mapStyles\";\n\nfunction Map() {\n    const [selectedBrunnen, setSelectedBrunnen] = useState(null);\n\n    useEffect(() => {\n        const listener = e => {\n            if (e.key === \"Escape\") {\n                setSelectedBrunnen(null);\n            }\n        };\n        window.addEventListener(\"keydown\", listener);\n\n        return () => {\n            window.removeEventListener(\"keydown\", listener);\n        };\n    }, []);\n\n    return (\n        <GoogleMap\n            defaultZoom={15}\n            defaultCenter={{ lat: 47.366950, lng: 8.547200 }}\n            defaultOptions={{ styles: mapStyles }}\n        >\n            {brunnenData.features.map(brunnen => (\n                <Marker\n                    key={brunnen.properties.objectid}\n                    position={{\n                        lat: brunnen.geometry.coordinates[1],\n                        lng: brunnen.geometry.coordinates[0]\n                    }}\n\n                    onClick={() => {\n                        setSelectedBrunnen(brunnen);\n                    }}\n\n                    onMouseOver={() => {\n                        setSelectedBrunnen(brunnen);\n                    }}\n\n                    /*\n                    AN ALLE: hier können wir das icon ändern. d.h. der rote \"Tropfen\" wird dann ein Bild/Symbol unserer Wahl\n\n                    icon={{\n                        url: `/skateboarding.svg`,\n                        scaledSize: new window.google.maps.Size(25, 25)\n                    }}\n                     */\n\n                />\n            ))}\n\n            {selectedBrunnen && (\n                <InfoWindow\n                    onCloseClick={() => {\n                        setSelectedBrunnen(null);\n                    }}\n                    position={{\n                        lat: selectedBrunnen.geometry.coordinates[1],\n                        lng: selectedBrunnen.geometry.coordinates[0]\n                    }}\n                >\n                    <div>\n                        <h2>{\"Art des Brunnens:\" + selectedBrunnen.properties.art_txt}</h2>\n                        <p>{\"Baujahr:\" + selectedBrunnen.properties.baujahr}</p>\n                    </div>\n                </InfoWindow>\n            )}\n        </GoogleMap>\n    );\n}\n\nconst MapWrapped = withScriptjs(withGoogleMap(Map));\n\nexport default function Maps() {\n    return (\n        <div style={{ width: \"100vw\", height: \"100vh\" }}>\n            <MapWrapped\n                googleMapURL={`https://maps.googleapis.com/maps/api/js?v=3.exp&libraries=geometry,drawing,places&key=AIzaSyDdG-nTEZ_bGS064sMlgL_dBdA4uZ2h5c0`}\n                loadingElement={<div style={{ height: `100%` }} />}\n                containerElement={<div style={{ height: `100%` }} />}\n                mapElement={<div style={{ height: `100%` }} />}\n            />\n        </div>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}