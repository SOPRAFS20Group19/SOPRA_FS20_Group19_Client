{"ast":null,"code":"import axios from'axios';import{getDomain}from'./getDomain';export var api=axios.create({baseURL:getDomain(),headers:{'Content-Type':'application/json'}});export var handleError=function handleError(error){if(error.response){var info='';info+=\"\\nrequest to: \".concat(error.response.request.responseURL);info+=\"\\nstatus code: \".concat(error.response.status);info+=\"\\nstatus text: \".concat(error.statusText);info+=\"\\nerror: \".concat(error.response.data.error);info+=\"\\nerror message: \".concat(error.response.data.message);console.log('The request was made and answered but was unsuccessful.',error.response);return info;}else{if(error.message.match(/Network Error/)){alert('The server cannot be reached. Did you start it?');}console.log('Something else happened.',error);return error.message;}};","map":{"version":3,"sources":["/Users/luisknufinke/Documents/UZH/04 - FS20/Softwarepraktikum/Milestone 1 Individual/sopra-fs20-client/src/helpers/api.js"],"names":["axios","getDomain","api","create","baseURL","headers","handleError","error","response","info","request","responseURL","status","statusText","data","message","console","log","match","alert"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,SAAT,KAA0B,aAA1B,CAEA,MAAO,IAAMC,CAAAA,GAAG,CAAGF,KAAK,CAACG,MAAN,CAAa,CAC9BC,OAAO,CAAEH,SAAS,EADY,CAE9BI,OAAO,CAAE,CAAE,eAAgB,kBAAlB,CAFqB,CAAb,CAAZ,CAKP,MAAO,IAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAAAC,KAAK,CAAI,CAClC,GAAIA,KAAK,CAACC,QAAV,CAAoB,CAClB,GAAIC,CAAAA,IAAI,CAAG,EAAX,CACAA,IAAI,0BAAqBF,KAAK,CAACC,QAAN,CAAeE,OAAf,CAAuBC,WAA5C,CAAJ,CACAF,IAAI,2BAAsBF,KAAK,CAACC,QAAN,CAAeI,MAArC,CAAJ,CACAH,IAAI,2BAAsBF,KAAK,CAACM,UAA5B,CAAJ,CACAJ,IAAI,qBAAgBF,KAAK,CAACC,QAAN,CAAeM,IAAf,CAAoBP,KAApC,CAAJ,CACAE,IAAI,6BAAwBF,KAAK,CAACC,QAAN,CAAeM,IAAf,CAAoBC,OAA5C,CAAJ,CAEAC,OAAO,CAACC,GAAR,CAAY,yDAAZ,CAAuEV,KAAK,CAACC,QAA7E,EACA,MAAOC,CAAAA,IAAP,CACD,CAVD,IAUO,CACL,GAAIF,KAAK,CAACQ,OAAN,CAAcG,KAAd,CAAoB,eAApB,CAAJ,CAA0C,CACxCC,KAAK,CAAC,iDAAD,CAAL,CACD,CAEDH,OAAO,CAACC,GAAR,CAAY,0BAAZ,CAAwCV,KAAxC,EACA,MAAOA,CAAAA,KAAK,CAACQ,OAAb,CACD,CACF,CAnBM","sourcesContent":["import axios from 'axios';\nimport { getDomain } from './getDomain';\n\nexport const api = axios.create({\n  baseURL: getDomain(),\n  headers: { 'Content-Type': 'application/json' }\n});\n\nexport const handleError = error => {\n  if (error.response) {\n    let info = '';\n    info += `\\nrequest to: ${error.response.request.responseURL}`;\n    info += `\\nstatus code: ${error.response.status}`;\n    info += `\\nstatus text: ${error.statusText}`;\n    info += `\\nerror: ${error.response.data.error}`;\n    info += `\\nerror message: ${error.response.data.message}`;\n\n    console.log('The request was made and answered but was unsuccessful.', error.response);\n    return info;\n  } else {\n    if (error.message.match(/Network Error/)) {\n      alert('The server cannot be reached. Did you start it?');\n    }\n\n    console.log('Something else happened.', error);\n    return error.message;\n  }\n};\n"]},"metadata":{},"sourceType":"module"}